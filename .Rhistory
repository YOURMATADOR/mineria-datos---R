print(i^3)
}
i<-0
while(i<1){
i<-rnorm(1)
print(i)
}
i<-0
while(i<1){
i<-rnorm(1)
if(i<0){
next()
}
else{
print(i)
}
}
final<-1000000
x<-1
i<-1
while(x<final){
i<-i +1
x<-x*i
print(x)
}
juego<- function(maximo){
i<- 0
while(i<maximo){
total<- 0
ran_uno<-0
ran_uno<- round(runif(2,2,12))
total<- (ran_uno[1] * ran_uno[2])
print("Resultado de la multiplacacion de")
print(ran_uno[1])
print(*)
print(ran_uno[2])
print(total)
numero_uno<- as.integer(readline())
print(total_usuario)
print(total)
if(total_usuario == total){
print("Tu respuesta")
print(numero_uno)
print("Es correcta")
i<- i +1
}
else{
print("Respuesta incorrecta")
break
}
}
}
juego(5)
for(i in 1:7){
print(i^3)
}
i<-0
while(i<1){
i<-rnorm(1)
print(i)
}
i<-0
while(i<1){
i<-rnorm(1)
if(i<0){
next()
}
else{
print(i)
}
}
final<-1000000
x<-1
i<-1
while(x<final){
i<-i +1
x<-x*i
print(x)
}
juego<- function(maximo){
i<- 0
while(i<maximo){
total<- 0
ran_uno<-0
ran_uno<- round(runif(2,2,12))
total<- (ran_uno[1] * ran_uno[2])
print("Resultado de la multiplacacion de")
print(ran_uno[1])
print("*")
print(ran_uno[2])
print(total)
numero_uno<- as.integer(readline())
total_usuario<- numero_uno
print(total_usuario)
print(total)
if(total_usuario == total){
print("Tu respuesta")
print(numero_uno)
print("Es correcta")
i<- i +1
}
else{
print("Respuesta incorrecta")
break
}
}
}
juego(5)
print("Es correcta")
for(i in 1:7){
print(i^3)
}
i<-0
while(i<1){
i<-rnorm(1)
print(i)
}
i<-0
while(i<1){
i<-rnorm(1)
if(i<0){
next()
}
else{
print(i)
}
}
final<-1000000
x<-1
i<-1
while(x<final){
i<-i +1
x<-x*i
print(x)
}
juego<- function(maximo){
i<- 0
while(i<maximo){
total<- 0
ran_uno<-0
ran_uno<- round(runif(2,2,12))
total<- (ran_uno[1] * ran_uno[2])
print("Resultado de la multiplacacion de")
print(ran_uno[1])
print("*")
print(ran_uno[2])
print(total)
numero_uno<- as.integer(readline())
total_usuario<- numero_uno
print(total_usuario)
print(total)
if(total_usuario == total){
print("Tu respuesta")
print(numero_uno)
print("Es correcta")
i<- i +1
print("Te restan")
print(i)
}
else{
print("Respuesta incorrecta")
break
}
}
}
juego(5)
print(i^3)
}
i<-0
while(i<1){
i<-rnorm(1)
print(i)
}
i<-0
while(i<1){
i<-rnorm(1)
if(i<0){
next()
}
else{
print(i)
}
}
final<-1000000
x<-1
i<-1
while(x<final){
i<-i +1
x<-x*i
print(x)
}
juego<- function(maximo){
i<- 0
while(i<maximo){
total<- 0
ran_uno<-0
ran_uno<- round(runif(2,2,12))
total<- (ran_uno[1] * ran_uno[2])
print("Resultado de la multiplacacion de")
print(ran_uno[1])
print("*")
print(ran_uno[2])
print(total)
numero_uno<- as.integer(readline())
total_usuario<- numero_uno
print(total_usuario)
print(total)
if(total_usuario == total){
print("Tu respuesta")
print(numero_uno)
print("Es correcta")
i<- i +1
print("Te restan")
print(maximo-i)
}
else{
print("Respuesta incorrecta")
break
}
}
}
juego(5)
for(i in 1:7){
print(i^3)
}
i<-0
while(i<1){
i<-rnorm(1)
print(i)
}
i<-0
while(i<1){
i<-rnorm(1)
if(i<0){
next()
}
else{
print(i)
}
}
final<-1000000
x<-1
i<-1
while(x<final){
i<-i +1
x<-x*i
print(x)
}
juego<- function(maximo){
i<- 0
while(i<maximo){
total<- 0
ran_uno<-0
ran_uno<- round(runif(2,2,12))
total<- (ran_uno[1] * ran_uno[2])
print("Resultado de la multiplacacion de")
print(ran_uno[1])
print("*")
print(ran_uno[2])
print(total)
numero_uno<- as.integer(readline())
total_usuario<- numero_uno
print(total_usuario)
print(total)
if(total_usuario == total){
print("Tu respuesta")
print(numero_uno)
print("Es correcta")
i<- i +1
print("Te restan")
print(maximo-i)
}
else{
print("Respuesta incorrecta")
break
}
}
}
juego(5)
x <- scan("",what="int")
10
x <- scan("",what="int")
x <- as.integer(scan("",what="int"))
juego_aleatorio()
juego_aleatorio <- function(){
print("Obtener 5 valores aleatorios el 1 al 10")
x <- scan("",what="int")
rand_num = floor(runif(1,1,10))
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
juego_aleatorio <- function(){
print("Obtener 5 valores aleatorios el 1 al 10")
x <- scan("",what="int")
rand_num = floor(runif(1,1,10))
print(rand_num)
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
juego_aleatorio <- function(){
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
juego_aleatorio <- function(){
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
juego_aleatorio <- function(){
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
}
else{
print("Valor incorrecto X")
}
}
juego_aleatorio()
juego_aleatorio <- function(){
i<- 0
while(i< maximo){
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
i<-i+1
}
else{
print("Valor incorrecto X")
break
}
}
print("Juego finalizado")
}
juego_aleatorio()
juego_aleatorio <- function(maximo){
i<- 0
while(i< maximo){
print("Obtener 5 valores aleatorios el 1 al 10")
rand_num = floor(runif(1,1,10))
print(rand_num)
x <- scan("",what="int")
if(x == rand_num){
print("Valor correcto ^")
i<-i+1
}
else{
print("Valor incorrecto X")
break
}
}
print("Juego finalizado")
}
juego_aleatorio(5)
view(iris)
# funcion sumari
# library(ggplot2)
# Orange$Tree-> factor(Orange$Tree,labels=c("arbol 1","arbol 2","arbol 3","arbol 4","arbol 5"))
# g<-ggplot(Orange,aes(x=Orange$Tree,y=Orange$age))
# g
# nrow
library(utils)
#head solo mostrar los renglones principales
a<-c("a","a",seq(5),"b","b",seq(7,11))
n_as<-c(1,2,NA,4,5,6,NA,7,8,9,NA)
n_as<-n_as[!is.na(n_as)]
random_numeros<-c()
random_numeros<-seq(50)
random_numeros<-replace(random_numeros,random_numeros,floor(runif(50,1,100)))
iris_info<-dimnames(iris)
iris_info
help(iris)
view(iris)
nrow(iris)
ncol(iris)
View(iris)
iris_info
iris[1:6]
head(iris,6)
iris[1:6,]
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("ggplot2")
library('ggplot2')
head(diamonts)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species))
library('ggplot2')
head(diamonts)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
library('ggplot2')
head(diamonts)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
source('~/Desktop/mineria_datos/ggplot_practica.R')
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
source('~/Desktop/mineria_datos/ggplot_practica.R')
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
p
source('~/Desktop/mineria_datos/ggplot_practica.R')
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( X - Petal.Length, Y - Petal.Width, colour - Species)) + geom_point()
p
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( x - Petal.Length, x - Petal.Width, colour - Species)) + geom_point()
p
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( x - Petal.Length, y - Petal.Width, colour - Species)) + geom_point()
p
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( x= Petal.Length, y= Petal.Width, colour = Species)) + geom_point()
p
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( x= Petal.Length, y= Petal.Width, colour = Species)) + geom_point()
p
ggsave('/grafica.png')
library('ggplot2')
head(diamonds)
p <- ggplot(iris)
p <- ggplot(iris,aes( x= Petal.Length, y= Petal.Width, colour = Species)) + geom_point()
p
ggsave('grafica.png')
ggplot(iris,aes( x= Petal.Length, y= Petal.Width, colour = Species)) + geom_point() + geom_smooth() + facet_grid(~ Species)
ggplot(iris,aes( x= Petal.Length, y= Petal.Width) + geom_point() + geom_smooth() + facet_grid(~ Species)
ggplot(iris,aes( x= Petal.Length, y= Petal.Width))+ geom_point() + geom_smooth() + facet_grid(~ Species)
install.packages('plotly')
